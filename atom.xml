<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yumiko&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/Yumiko-Liu/"/>
  <updated>2018-02-22T13:17:33.000Z</updated>
  <id>https://github.com/Yumiko-Liu/</id>
  
  <author>
    <name>Yumiko</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>H5唤起移动支付方法（支付宝、微信支付、银联支付）</title>
    <link href="https://github.com/Yumiko-Liu/2018/02/21/20180221/"/>
    <id>https://github.com/Yumiko-Liu/2018/02/21/20180221/</id>
    <published>2018-02-21T13:35:22.000Z</published>
    <updated>2018-02-22T13:17:33.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近开发的项目中涉及到了移动支付的模块，主要是支付宝、微信支付和银联支付。<br>下面总结一下H5唤起这些移动支付平台的方法。</p></blockquote><p>主要流程：后端接入支付平台SDK，当支付发起时，后端获得支付参数信息，将信息返回给前端，前端根据这些信息唤起支付。</p><p>为了简化调用，我们封装了一个获取支付参数信息的方法，可以通过传递参数来返回不同的支付参数信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// getPayTypeParam 为获取支付参数信息的方法</span></span><br><span class="line">getPayTypeParam(&#123;<span class="string">'payType'</span>: payType&#125;).then(<span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(params);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>具体的请求参数说明可以参考<a href="https://docs.open.alipay.com/203/107090/" target="_blank" rel="noopener">支付宝开发文档</a>、<a href="https://pay.weixin.qq.com/wiki/doc/api/H5.php?chapter=9_20&amp;index=1" target="_blank" rel="noopener">微信支付开发文档</a>、<a href="https://open.unionpay.com/ajweb/product/detail?id=66" target="_blank" rel="noopener">银联支付开发文档</a>。</p><p>成功获得支付参数信息即可开始唤起支付。</p><h3 id="支付宝"><a href="#支付宝" class="headerlink" title="支付宝"></a>支付宝</h3><p>唤起支付宝的方式是通过把获取的支付参数信息作为url参数，跳转到</p><p><code>https://openapi.alipay.com/gateway.do</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getPayTypeParam(&#123;<span class="string">'payType'</span>: payType&#125;).then(<span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">  location.href = <span class="string">'https://openapi.alipay.com/gateway.do?'</span> + params;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>若设置了return_url（前台回跳），会在支付成功后返回该页面并带上唯一订单号、交易流水号等关键参数，详细可参阅支付宝开发文档。</p><h3 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h3><p>和支付宝相似，唤起微信支付的方法也是通过把获取的支付参数信息作为参数，进行url跳转。</p><p>但和支付宝不同的是，微信支付的前台回跳参数是不需要验签的。直接作为参数拼接到url即可。</p><p>假设通过统一下单接口获到的MWEB_URL= <a href="https://wx.tenpay.com/cgi-bin/mmpayweb-bin/checkmweb?prepay_id=wx20161110163838f231619da20804912345&amp;package=1037687096" target="_blank" rel="noopener">https://wx.tenpay.com/cgi-bin/mmpayweb-bin/checkmweb?prepay_id=wx20161110163838f231619da20804912345&amp;package=1037687096</a></p><p>则拼接后的地址为MWEB_URL= <a href="https://wx.tenpay.com/cgi-bin/mmpayweb-bin/checkmweb?prepay_id=wx20161110163838f231619da20804912345&amp;package=1037687096&amp;redirect_url=https%3A%2F%2Fwww.wechatpay.com.cn" target="_blank" rel="noopener">https://wx.tenpay.com/cgi-bin/mmpayweb-bin/checkmweb?prepay_id=wx20161110163838f231619da20804912345&amp;package=1037687096&amp;redirect_url=https%3A%2F%2Fwww.wechatpay.com.cn</a></p><p>还有要注意的是需对redirect_url进行urlencode处理。</p><h3 id="银联支付"><a href="#银联支付" class="headerlink" title="银联支付"></a>银联支付</h3><p>银联支付是三个支付中最麻烦的一个。( ╯-_-)╯┴—┴</p><p>方法是将请求参数组装成form表单，form表单post提交到银联交易地址，打开银联支付页面。银联交易地址可参阅银联支付开发文档中的「测试地址与测试卡」，这里有一些测试地址以及测试账号。</p><p>由于懒得拼装表单，所以获取银联支付参数信息的时候直接返回了一个form表单的html文本，然后直接通过post提交。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">getPayTypeParam(&#123;<span class="string">'payType'</span>: payType&#125;).then(<span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> _from = params; <span class="comment">// params为html文本</span></span><br><span class="line">  <span class="keyword">this</span>.$refs.pay.innerHTML = _from;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'pay_form'</span>).submit();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在开发过程中也踩到了坑。银联支付的frontUrl（前台通知地址）参数是不支持「#」、换行符等字符的。( ╯#-_-)╯┴—┴</p><p>由于我们设置的frontUrl带有「#」，所以支付后无法进行跳转。</p><p>而且，支付后返回的订单号等信息不是通过url带回的，是通过FormData对象带回的。(╯￣Д￣)╯╘═╛</p><p>我们的解决办法是把frontUrl设置成一个空白的jsp页面，jsp获取到FormData对象的信息后进行二次跳转。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;最近开发的项目中涉及到了移动支付的模块，主要是支付宝、微信支付和银联支付。&lt;br&gt;下面总结一下H5唤起这些移动支付平台的方法。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要流程：后端接入支付平台SDK，当支付发起时，后端获得支付参数信息，将信息返
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2017年小結。</title>
    <link href="https://github.com/Yumiko-Liu/2018/02/07/2017-summarize/"/>
    <id>https://github.com/Yumiko-Liu/2018/02/07/2017-summarize/</id>
    <published>2018-02-07T12:23:41.000Z</published>
    <updated>2018-02-10T12:31:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>越來越覺得時間過得很快，這樣又過去了一年。</p><p>年初，幾位前輩陸陸續續離開了公司，不捨。他們都是十分熱情和有趣的人，幫助過我很多。實習期間能有這一幫前輩帶着，是我的運氣。</p><p>五月，初夏。搬家到海珠區和姐姐一起住。找房子的事情交給了她負責，但是因爲懶，便匆匆忙忙地找了一間兩房一廳的房子。房子在一個老小區裏面，九樓，沒電梯，剛開始每天爬上爬下挺累的，但是現在習慣了便不覺得了。由於房租相對低廉，裏面也就沒有什麼家具家電，冰箱，洗衣機都是自己買的。因爲是頂樓，加上沒有空調，所以夏天特別的熱，盛夏的時候，有幾晚是熱到睡不着的。雖然租的房子不怎麼好，但是週邊的環境還是不錯的。海珠區是廣州的老城區，住在這裏能感受到廣州味，也能了解老廣州人的日常生活，這裏確實是一個安靜，舒適的地方。另外，姐姐時常會在家煮飯，大家一起吃飯給我一種家的感覺，而不是孤身一人的過客。</p><p>這一年最大的變化是七月份的畢業。雖然從實習開始除了晚上在學校吃飯，其他時間都已經不在學校生活，但是真正到了畢業的時候內心也難免會有不捨。畢竟畢業之後就意味着和同學見面的機會就會變少了。不過，有幾個室友在附近工作，晚上回去學校吃飯的時候，偶爾也會碰見他們，還可以跟他們聊一下近況或者技術方面的問題。</p><p>隨着畢業，自己也結束了實習，開始轉正。由於公司離學校很近，大概是十幾分鐘的路程。從實習開始，晚上下班後我都會經常回學校吃飯。但是畢業之後，發現飯卡卻不能用了，只能使用支付寶。由於支持支付寶的都是味道一般的套餐，所以現在回學校吃飯的頻率也沒以前那麼高了。</p><p>雖然已經畢業了，但是在我的心目中自己永遠是一名學生，也希望大家可以繼續以「同學」相稱。如果有人叫我「劉同學」，我是非常開心的。因為我發現有些人工作之後，會不知不覺地丟失了學生時代的純真，變得功利，講的話題都和金錢相關，我很討厭這些。我希望大家無論在哪裏都能繼續保持學習的上進心，使整個社會變得更好。</p><p>這一年買了兩件新的數碼產品。iPad mini 4和MacBook Pro。購買iPad mini 4的經歷使得我對蘋果的好感度挺升了不少。購買了一個多月之後，屏幕突然就無法觸摸了。本以爲蘋果會選擇維修屏幕，沒想到它直接給我更換了一部新的機器，開心。之後，又在雙十一購買了2017款的MacBook Pro 13，用京東白條分期，12期，每月830元。MacBook一直是我夢寐以求的東西，因爲價格昂貴，一直只停留在想象的狀態。雖然分期每個月壓力也不小，但是畢竟是自己喜歡的東西，也當作是送給自己的一份禮物吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;越來越覺得時間過得很快，這樣又過去了一年。&lt;/p&gt;
&lt;p&gt;年初，幾位前輩陸陸續續離開了公司，不捨。他們都是十分熱情和有趣的人，幫助過我很多。實習期間能有這一幫前輩帶着，是我的運氣。&lt;/p&gt;
&lt;p&gt;五月，初夏。搬家到海珠區和姐姐一起住。找房子的事情交給了她負責，但是因爲懶，便
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>跟大家說聲 Hi~</title>
    <link href="https://github.com/Yumiko-Liu/2017/12/12/hi/"/>
    <id>https://github.com/Yumiko-Liu/2017/12/12/hi/</id>
    <published>2017-12-12T06:32:31.000Z</published>
    <updated>2018-02-21T14:51:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>精工細作，盡情享樂之作。</p></blockquote><p>我是Yumiko，1995年9月生，目前在廣州工作。<br>這是博客的第一篇文章，初次見面，請多多指教。<br>先來介紹一下自己。</p><h3 id="興趣"><a href="#興趣" class="headerlink" title="興趣"></a>興趣</h3><p>Yumiko喜歡日本，覺得日本是一個神奇的國家。<br>Yumiko喜歡日本音樂，從初中二年級開始聽日本音樂。<br>Yumiko也喜歡萌 (´・ω・`)。</p><h3 id="經歷"><a href="#經歷" class="headerlink" title="經歷"></a>經歷</h3><p>2016年7月開始實習，web前端工程師。</p><h3 id="此博客"><a href="#此博客" class="headerlink" title="此博客"></a>此博客</h3><p>此博客的內容沒有具體的偏向，可能是Yumiko的日常，也有可能是一些技術摘錄與分享。</p><h3 id="關於名字"><a href="#關於名字" class="headerlink" title="關於名字"></a>關於名字</h3><p>可能有人會問，為什麼會用一個女性化的名字。</p><ul><li>Yumiko譯為<code>由美子</code>，有優美之意。</li><li>同時，Yumiko也是<code>弓子</code>的意思，柔韌而迅速。</li></ul><p>Yumiko覺得這些都能代表自己，便用了這一名字。</p><h3 id="聯絡方式"><a href="#聯絡方式" class="headerlink" title="聯絡方式"></a>聯絡方式</h3><ul><li>郵箱：yumiko.liu@yahoo.com</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;精工細作，盡情享樂之作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我是Yumiko，1995年9月生，目前在廣州工作。&lt;br&gt;這是博客的第一篇文章，初次見面，請多多指教。&lt;br&gt;先來介紹一下自己。&lt;/p&gt;
&lt;h3 id=&quot;興趣&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
</feed>
